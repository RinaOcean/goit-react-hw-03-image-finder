{"version":3,"sources":["components/SearchBar/SearchBar.jsx","components/ImageGalleryItem/ImageGalleryItem.jsx","components/ImageGallery/ImageGallery.jsx","components/Button/Button.jsx","services/images-api.js","components/Modal/Modal.jsx","components/LoaderSpinner/LoaderSpinner.jsx","App.js","index.js"],"names":["SearchBar","state","inputValue","handleChange","event","setState","currentTarget","value","handleSubmit","preventDefault","trim","props","onSubmit","reset","toast","warn","this","className","type","autoComplete","autoFocus","placeholder","onChange","Component","ImageGalleryItem","images","onClick","map","id","webformatURL","largeImageURL","src","alt","ImageGallery","Button","searchQuery","currentPage","url","axios","get","modalRoot","document","querySelector","Modal","handleKeyDown","code","onClose","onBackdropClick","target","window","addEventListener","removeEventListener","createPortal","children","LoaderSpinner","variant","disabled","Spinner","as","animation","size","role","aria-hidden","App","isLoading","error","showModal","bigImageUrl","imageStatus","onSearchHandle","query","fetchImages","options","imagesApi","then","response","data","total","filteredData","hits","hit","prevState","catch","finally","scrollTo","top","documentElement","scrollHeight","behavior","onImageClick","toggleModal","onImageLoaded","prevProps","shouldRenderLoadMoreButton","length","color","height","width","onLoad","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.9820ac0d.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\nimport { toast } from 'react-toastify';\r\nimport PropTypes from 'prop-types';\r\n\r\nclass SearchBar extends Component {\r\n  static propTypes = {\r\n    inputValue: PropTypes.string,\r\n  };\r\n\r\n  state = {\r\n    inputValue: '',\r\n  };\r\n\r\n  handleChange = event => {\r\n    this.setState({ inputValue: event.currentTarget.value });\r\n  };\r\n\r\n  handleSubmit = event => {\r\n    event.preventDefault();\r\n    if (this.state.inputValue.trim() === '') {\r\n      toast.warn('Please, enter something');\r\n\r\n      return;\r\n    }\r\n    this.props.onSubmit(this.state.inputValue);\r\n    this.reset();\r\n  };\r\n\r\n  reset = () => {\r\n    this.setState({ inputValue: '' });\r\n  };\r\n\r\n  // componentDidMount() {}\r\n  // componentDidUpdate(prevProps, prevState, snapshot) {\r\n\r\n  // }\r\n\r\n  render() {\r\n    const { inputValue } = this.state;\r\n\r\n    return (\r\n      <header className=\"Searchbar\">\r\n        <form onSubmit={this.handleSubmit} className=\"SearchForm\">\r\n          <button type=\"submit\" className=\"SearchForm-button\">\r\n            <span className=\"SearchForm-button-label\">Search</span>\r\n          </button>\r\n\r\n          <input\r\n            className=\"SearchForm-input\"\r\n            type=\"text\"\r\n            value={inputValue}\r\n            autoComplete=\"off\"\r\n            autoFocus\r\n            placeholder=\"Search images and photos\"\r\n            onChange={this.handleChange}\r\n          />\r\n        </form>\r\n      </header>\r\n    );\r\n  }\r\n}\r\n\r\nexport default SearchBar;\r\n","import PropTypes from 'prop-types';\r\n\r\nconst ImageGalleryItem = ({ images, onClick }) => (\r\n  <>\r\n    {images.map(({ id, webformatURL, largeImageURL }) => {\r\n      return (\r\n        <li key={id} className=\"ImageGalleryItem\">\r\n          <img\r\n            onClick={() => onClick(largeImageURL)}\r\n            src={webformatURL}\r\n            alt=\"\"\r\n            className=\"ImageGalleryItem-image\"\r\n          />\r\n        </li>\r\n      );\r\n    })}\r\n  </>\r\n);\r\n\r\nImageGalleryItem.propTypes = {\r\n  images: PropTypes.arrayOf(PropTypes.object),\r\n  onClick: PropTypes.func,\r\n};\r\n\r\nexport default ImageGalleryItem;\r\n","import PropTypes from 'prop-types';\r\nimport ImageGalleryItem from '../ImageGalleryItem';\r\n\r\nconst ImageGallery = ({ images, onClick }) => (\r\n  <ul className=\"ImageGallery\">\r\n    <ImageGalleryItem images={images} onClick={onClick} />\r\n  </ul>\r\n);\r\n\r\nImageGallery.propTypes = {\r\n  children: PropTypes.node,\r\n};\r\n\r\nexport default ImageGallery;\r\n","import PropTypes from 'prop-types';\r\n\r\nconst Button = ({ onClick }) => (\r\n  <button type=\"button\" className=\"Button\" onClick={onClick}>\r\n    Load more\r\n  </button>\r\n);\r\n\r\nButton.propTypes = {\r\n  onClick: PropTypes.func,\r\n};\r\n\r\nexport default Button;\r\n","import axios from 'axios';\r\n// import { toast } from 'react-toastify';\r\n\r\nconst API_KEY = '20659430-8e33c69d8b4c60137606db57c';\r\nconst BASE_URL = 'https://pixabay.com/api';\r\n\r\nconst fetchImages = ({ searchQuery = '', currentPage = 1 }) => {\r\n  const url = `${BASE_URL}/?image_type=photo&orientation=horizontal&q=${searchQuery}&page=${currentPage}&per_page=12&key=${API_KEY}`;\r\n  return axios.get(url);\r\n};\r\n// eslint-disable-next-line\r\nexport default { fetchImages };\r\n","import React, { Component } from 'react';\r\nimport { createPortal } from 'react-dom';\r\n\r\nconst modalRoot = document.querySelector('#modal-root');\r\nclass Modal extends Component {\r\n  componentDidMount() {\r\n    window.addEventListener('keydown', this.handleKeyDown);\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    window.removeEventListener('keydown', this.handleKeyDown);\r\n  }\r\n\r\n  handleKeyDown = event => {\r\n    if (event.code === 'Escape') {\r\n      this.props.onClose();\r\n    }\r\n  };\r\n\r\n  onBackdropClick = event => {\r\n    if (event.currentTarget === event.target) {\r\n      this.props.onClose();\r\n    }\r\n  };\r\n\r\n  render() {\r\n    return createPortal(\r\n      <div className=\"Overlay\" onClick={this.onBackdropClick}>\r\n        <div className=\"Modal\">{this.props.children}</div>\r\n      </div>,\r\n      modalRoot,\r\n    );\r\n  }\r\n}\r\n\r\nexport default Modal;\r\n","import Spinner from 'react-bootstrap/Spinner';\r\n\r\nconst LoaderSpinner = () => (\r\n  <button className=\"Loader\" variant=\"primary\" disabled>\r\n    <Spinner\r\n      as=\"span\"\r\n      animation=\"border\"\r\n      size=\"sm\"\r\n      role=\"status\"\r\n      aria-hidden=\"true\"\r\n    />\r\n    Loading...\r\n  </button>\r\n);\r\n\r\nexport default LoaderSpinner;\r\n","import React, { Component } from 'react';\nimport { ToastContainer, toast } from 'react-toastify';\nimport 'react-loader-spinner/dist/loader/css/react-spinner-loader.css';\nimport Loader from 'react-loader-spinner';\nimport PropTypes from 'prop-types';\n\nimport SearchBar from './components/SearchBar';\nimport ImageGallery from './components/ImageGallery';\nimport Button from './components/Button';\nimport imagesApi from './services/images-api';\nimport Modal from './components/Modal';\nimport LoaderSpinner from './components/LoaderSpinner';\n\nimport 'react-toastify/dist/ReactToastify.css';\nimport './App.scss';\n\nclass App extends Component {\n  static propTypes = {\n    images: PropTypes.arrayOf(PropTypes.object),\n    currentPage: PropTypes.number,\n    searchQuery: PropTypes.string,\n    isLoading: PropTypes.bool,\n    error: PropTypes.object,\n    showModal: PropTypes.bool,\n    bigImageUrl: PropTypes.string,\n    imageStatus: PropTypes.string,\n  };\n\n  state = {\n    images: [],\n    currentPage: 1,\n    searchQuery: '',\n    isLoading: false,\n    error: null,\n    showModal: false,\n    bigImageUrl: '',\n    imageStatus: 'loading',\n  };\n\n  onSearchHandle = query => {\n    this.setState({\n      searchQuery: query,\n      currentPage: 1,\n      images: [],\n      error: null,\n    });\n  };\n\n  fetchImages = () => {\n    const { currentPage, searchQuery } = this.state;\n    const options = {\n      searchQuery,\n      currentPage,\n    };\n\n    this.setState({ isLoading: true });\n\n    imagesApi\n      .fetchImages(options)\n      .then(response => {\n        if (response.data.total === 0) {\n          toast.error('Nothing matching the request');\n          return;\n        }\n        const filteredData = response.data.hits.map(hit => {\n          return {\n            id: hit.id,\n            webformatURL: hit.webformatURL,\n            largeImageURL: hit.largeImageURL,\n          };\n        });\n\n        this.setState(prevState => ({\n          images: [...prevState.images, ...filteredData],\n          currentPage: prevState.currentPage + 1,\n        }));\n      })\n      .catch(error => {\n        this.setState({ error });\n        toast.error('Error occurred. Try later');\n      })\n      .finally(() => {\n        if (this.state.currentPage > 2) {\n          window.scrollTo({\n            top: document.documentElement.scrollHeight,\n            behavior: 'smooth',\n          });\n        }\n        return this.setState({ isLoading: false });\n      });\n  };\n\n  onImageClick = url => {\n    this.setState({ bigImageUrl: url });\n    this.toggleModal();\n    this.setState({ imageStatus: 'loading' });\n  };\n\n  toggleModal = () => {\n    this.setState(({ showModal }) => ({\n      showModal: !showModal,\n    }));\n  };\n\n  onImageLoaded = () => {\n    this.setState({ imageStatus: 'loaded' });\n  };\n\n  // componentDidMount() {}\n  componentDidUpdate(prevProps, prevState) {\n    if (prevState.searchQuery !== this.state.searchQuery) {\n      this.fetchImages();\n    }\n  }\n\n  render() {\n    const {\n      images,\n      isLoading,\n      error,\n      showModal,\n      bigImageUrl,\n      imageStatus,\n    } = this.state;\n\n    const shouldRenderLoadMoreButton = images.length > 0 && !isLoading;\n\n    return (\n      <>\n        {showModal && (\n          <Modal onClose={this.toggleModal}>\n            {imageStatus === 'loading' && (\n              <Loader type=\"Circles\" color=\"#4b817a\" height={80} width={80} />\n            )}\n\n            <img src={bigImageUrl} alt=\"\" onLoad={this.onImageLoaded} />\n          </Modal>\n        )}\n\n        <SearchBar onSubmit={this.onSearchHandle} />\n        {error && (\n          <h1 className=\"error-text\">\n            Ooops!Something went wrong. Try again later\n          </h1>\n        )}\n        <ImageGallery images={images} onClick={this.onImageClick} />\n        {isLoading && <LoaderSpinner />}\n        {shouldRenderLoadMoreButton && (\n          <Button onClick={this.fetchImages} isLoading={isLoading}></Button>\n        )}\n        <ToastContainer />\n      </>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.scss';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}